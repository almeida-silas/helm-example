apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    app: {{ .Values.name }}
    environment: {{ .Values.environment }}
    appVersion: {{ .Values.appVersion }}
spec:
  replicas: {{ .Values.deployment.replicas | default "1" }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      environment: {{ .Values.environment }}
      appVersion: {{ .Values.appVersion }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Values.name }} 
        name: {{ .Values.name }}
        system: {{ .Values.system }}
        environment: {{ .Values.environment }}
        appVersion: {{ .Values.appVersion }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: silassennac4/api-node-k8s:latest
          readinessProbe:
            {{- if .Values.deployment.commandCheck }}
            exec:
              command:
              - sh
              - -c
              - netstat -plnt | grep :{{ .Values.deployment.healthCheckPort | default "80" }}
            {{- else }}  
            httpGet:
              path: {{ .Values.deployment.healthCheckPath | default "/actuator/health" }}
              port: {{ .Values.deployment.healthCheckPort | default "80" }}
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 3
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            {{- if .Values.deployment.commandCheck }}
            exec:
              command:
              - sh
              - -c
              - netstat -plnt | grep :{{ .Values.deployment.healthCheckPort | default "80" }}
            {{- else }}  
            httpGet:
              path: {{ .Values.deployment.healthCheckPath | default "/actuator/health" }}
              port: {{ .Values.deployment.healthCheckPort | default "80" }}
              scheme: HTTP
            {{- end }}
            initialDelaySeconds: 120
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 10
          ports:
            - containerPort: {{ .Values.deployment.containerPort | default "80" }}
          imagePullPolicy: Always
          
          resources:
            requests:
              memory: {{ .Values.deployment.resources.requests.memory | default "128Mi" }}
              cpu: {{ .Values.deployment.resources.requests.cpu | default "100m" }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory | default "256Mi" }}
              cpu: {{ .Values.deployment.resources.limits.cpu | default "200m" }}

          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-config
          {{- range $configMap := .Values.configMaps  }}
            - configMapRef:
                name: {{ $configMap }}
          {{- end }}
          env:
          {{- if .Values.deployment.scheduling }}
            - name :  SCHEDULING_ENABLED
              value:  'true'
          {{- else }}
            - name :  SCHEDULING_ENABLED
              value:  'false'
          {{- end }}
          {{- range .Values.secrets }}
            {{- $secretName := .secretName }}
            {{- range $env, $secretKey := .secretBinds }}
            - name: {{ $env }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $secretKey }}
            {{- end }}
          {{- end }}
